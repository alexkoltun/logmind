#!/bin/bash

### BEGIN INIT INFO
# Provides:          logmind-shipper
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts logmind-shipper
# Description:       Starts logmind-shipper as a daemon
### END INIT INFO

# absolute path to executable binary
progpath=$(which java)

# arguments to script
opts='-jar /usr/local/logmind/sixthsense/logstash.jar agent -f /usr/local/logmind/sixthsense/config/shipper.conf'

# binary program name
prog='logmind-shipper'

# logfile 
logfile=/usr/local/logmind/sixthsense/$prog.log

# pid file
pidfile="/var/run/${prog}.pid"

# make sure full path to executable binary is found
! [ -x $progpath ] && echo "$progpath: executable not found" && exit 1

start() {
  # see if running
  if [ -f $pidfile ]; then 
    local pid=$(cat $pidfile)

    if [ -d "/proc/$pid" ]; then
      echo "$prog (pid $pid) is already running"
      return 0
    fi
  fi
  
  printf "%-50s%s" "Starting $prog: " ''
  
  # run the program in the background
  $progpath $opts > $logfile 2>&1 &

  # save pid to file
  local pid=$!
  echo $pid > $pidfile
  
  if [ -d "/proc/$pid" ]; then
    echo "started"
  else
    echo "failed"
  fi
}

stop() {
  if [ -f $pidfile ]; then 
    local pid=$(cat $pidfile)
	if [ -d "/proc/$pid" ]; then
	  printf "%-50s%s" "Stopping $prog (pid $pid): " ''
      kill -TERM $pid
	  echo stopped
	  rm -f $pidfile
	  return 0
    fi
  fi
  
  echo "$prog not running"
}

status() {
  # see if running
  if [ -f $pidfile ]; then 
    local pid=$(cat $pidfile)

    if [ -f "/proc/$pid/exe" ]; then
      echo "$prog (pid $pid) is running"
	  return 0
    fi
  fi
  
  echo "$prog is stopped"
}

case $1 in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    stop
    sleep 1
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart}"
    exit 1
esac

exit $?